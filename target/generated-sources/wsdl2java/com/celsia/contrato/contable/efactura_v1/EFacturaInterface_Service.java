package com.celsia.contrato.contable.efactura_v1;

import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import jakarta.xml.ws.Service;

/**
 * This class was generated by Apache CXF 4.1.1
 * 2025-05-21T14:23:02.371-05:00
 * Generated source version: 4.1.1
 *
 */
@WebServiceClient(name = "eFactura_interface",
                  wsdlLocation = "file:/home/fmarango/IdeaProjects/efactura/src/main/resources/wsdl/eFactura.wsdl",
                  targetNamespace = "http://www.celsia.com/contrato/contable/eFactura_v1")
public class EFacturaInterface_Service extends Service {

    public static final URL WSDL_LOCATION;

    public static final QName SERVICE = new QName("http://www.celsia.com/contrato/contable/eFactura_v1", "eFactura_interface");
    public static final QName EFacturaInterfaceSOAPTEST = new QName("http://www.celsia.com/contrato/contable/eFactura_v1", "eFactura_interfaceSOAP_TEST");
    public static final QName EFacturaInterfaceSOAPPRD = new QName("http://www.celsia.com/contrato/contable/eFactura_v1", "eFactura_interfaceSOAP_PRD");
    public static final QName EFacturaInterfaceSOAPDES = new QName("http://www.celsia.com/contrato/contable/eFactura_v1", "eFactura_interfaceSOAP_DES");
    static {
        URL url = null;
        try {
            url = URI.create("file:/home/fmarango/IdeaProjects/efactura/src/main/resources/wsdl/eFactura.wsdl").toURL();
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(EFacturaInterface_Service.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/home/fmarango/IdeaProjects/efactura/src/main/resources/wsdl/eFactura.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public EFacturaInterface_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EFacturaInterface_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EFacturaInterface_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public EFacturaInterface_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public EFacturaInterface_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public EFacturaInterface_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns EFacturaInterface
     */
    @WebEndpoint(name = "eFactura_interfaceSOAP_TEST")
    public EFacturaInterface getEFacturaInterfaceSOAPTEST() {
        return super.getPort(EFacturaInterfaceSOAPTEST, EFacturaInterface.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EFacturaInterface
     */
    @WebEndpoint(name = "eFactura_interfaceSOAP_TEST")
    public EFacturaInterface getEFacturaInterfaceSOAPTEST(WebServiceFeature... features) {
        return super.getPort(EFacturaInterfaceSOAPTEST, EFacturaInterface.class, features);
    }


    /**
     *
     * @return
     *     returns EFacturaInterface
     */
    @WebEndpoint(name = "eFactura_interfaceSOAP_PRD")
    public EFacturaInterface getEFacturaInterfaceSOAPPRD() {
        return super.getPort(EFacturaInterfaceSOAPPRD, EFacturaInterface.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EFacturaInterface
     */
    @WebEndpoint(name = "eFactura_interfaceSOAP_PRD")
    public EFacturaInterface getEFacturaInterfaceSOAPPRD(WebServiceFeature... features) {
        return super.getPort(EFacturaInterfaceSOAPPRD, EFacturaInterface.class, features);
    }


    /**
     *
     * @return
     *     returns EFacturaInterface
     */
    @WebEndpoint(name = "eFactura_interfaceSOAP_DES")
    public EFacturaInterface getEFacturaInterfaceSOAPDES() {
        return super.getPort(EFacturaInterfaceSOAPDES, EFacturaInterface.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EFacturaInterface
     */
    @WebEndpoint(name = "eFactura_interfaceSOAP_DES")
    public EFacturaInterface getEFacturaInterfaceSOAPDES(WebServiceFeature... features) {
        return super.getPort(EFacturaInterfaceSOAPDES, EFacturaInterface.class, features);
    }

}
